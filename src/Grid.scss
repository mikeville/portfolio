@import "variables.scss";

$gutter-size: 3%;

.contained {
    margin: 0 auto;
    padding: 0 40px;
    max-width: $screen_viewport_xl;
  }
  

// Flex approach ==================

// .columns {
//     display: flex;
//     flex-wrap: wrap;
//     justify-content: flex-start;
// }

// .columns--nowrap {
//     flex-wrap: nowrap;
// }

@media only screen and (min-width: $screen_viewport_sm) {

    .grid {
        display: grid;
        justify-content: space-between;
        grid-template-columns: repeat(12, (100/12) - $gutter-size);
    }
    
    .grid > div {
        // debugging -----
        // background-color: peachpuff;
    }
    
    .span-1 { grid-column-start: span 1; }
    .span-2 { grid-column-start: span 2; }
    .span-3 { grid-column-start: span 3; }
    .span-4 { grid-column-start: span 4; }
    .span-5 { grid-column-start: span 5; }
    .span-6 { grid-column-start: span 6; }
    .span-7 { grid-column-start: span 7; }
    .span-8 { grid-column-start: span 8; }
    .span-9 { grid-column-start: span 9; }
    .span-10 { grid-column-start: span 10; }
    .span-11 { grid-column-start: span 11; }
    .span-12 { grid-column-start: span 12; }

    .align-right {
        grid-column-end: 13; 
    }
    
    // Still don't know how to do a "push" where a grid item is offset by a specific number of columns...

}


